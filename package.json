{
  "name": "ordermind_api",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "start": "nest start",
    "start:dev": "dotenvx run -f .env.development -- nest start --watch",
    "start:staging": "dotenvx run -f .env.staging -- nest start",
    "start:debug": "dotenvx run -f .env.development -- nest start --debug --watch",
    "start:prod": "dotenvx run -f .env.production -- node dist/main",
    "lint": "eslint \"{src,test}/**/*.ts\"",
    "lint:fix": "eslint \"{src,test}/**/*.ts\" --fix",
    "type-check": "tsc --noEmit",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "format:check": "prettier --check \"src/**/*.ts\" \"test/**/*.ts\"",
    "test": "cross-env NODE_ENV=test jest",
    "test:watch": "cross-env NODE_ENV=test jest --watch",
    "test:cov": "cross-env NODE_ENV=test jest --coverage",
    "test:debug": "cross-env NODE_ENV=test node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "cross-env NODE_ENV=test jest --config ./test/jest-e2e.json",
    "qa": "npm run type-check && npm run lint && npm run format:check && npm run test",
    "qa:fix": "npm run type-check && npm run lint:fix && npm run format && npm run test",
    "env:encrypt": "dotenvx encrypt",
    "env:encrypt:dev": "dotenvx encrypt -f .env.development",
    "env:encrypt:staging": "dotenvx encrypt -f .env.staging",
    "env:encrypt:prod": "dotenvx encrypt -f .env.production",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:migrate:deploy": "prisma migrate deploy",
    "db:migrate:reset": "prisma migrate reset",
    "db:seed": "prisma db seed",
    "db:studio": "prisma studio",
    "db:format": "prisma format",
    "db:validate": "prisma validate",
    "postinstall": "prisma generate",
    "prepare": "husky"
  },
  "dependencies": {
    "@dotenvx/dotenvx": "^1.51.0",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/swagger": "^11.2.0",
    "@prisma/client": "^6.17.1",
    "@sindresorhus/slugify": "^3.0.0",
    "auth0": "^5.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "jwks-rsa": "^3.2.0",
    "p-retry": "^7.1.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "prisma": "^6.1.0",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "zod": "^4.1.12"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@types/express": "^5.0.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^22.18.9",
    "@types/passport-jwt": "^4.0.1",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^8.46.0",
    "@typescript-eslint/parser": "^8.46.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-prettier": "^5.2.2",
    "eslint-plugin-unused-imports": "^4.2.0",
    "globals": "^16.0.0",
    "husky": "^9.1.7",
    "jest": "^30.0.0",
    "lint-staged": "^16.2.3",
    "prettier": "^3.4.2",
    "prisma": "^6.17.1",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  }
}
